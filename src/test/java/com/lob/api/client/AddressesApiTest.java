/*
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)? 
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.lob.api.client;

import com.lob.api.ApiException;
import com.lob.model.Address;
import com.lob.model.AddressDeletion;
import com.lob.model.AddressEditable;
import com.lob.model.AddressList;
import com.lob.model.LobError;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.testng.annotations.*;

/**
 * API tests for AddressesApi
 */
@Test(enabled=false)
public class AddressesApiTest {

    private final AddressesApi api = new AddressesApi();

    
    /**
     * create
     *
     * Creates a new address given information
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test(enabled=false)
    public void addressCreateTest() throws ApiException {
        AddressEditable addressEditable = null;
                Address response = api.addressCreate(addressEditable);
        // TODO: test validations
    }
    
    /**
     * delete
     *
     * Deletes the details of an existing address.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test(enabled=false)
    public void addressDeleteTest() throws ApiException {
        String adrId = null;
                AddressDeletion response = api.addressDelete(adrId);
        // TODO: test validations
    }
    
    /**
     * get
     *
     * Retrieves the details of an existing address.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test(enabled=false)
    public void addressRetrieveTest() throws ApiException {
        String adrId = null;
                Address response = api.addressRetrieve(adrId);
        // TODO: test validations
    }
    
    /**
     * list
     *
     * Returns a list of your addresses.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test(enabled=false)
    public void addressesListTest() throws ApiException {
        Integer limit = null;
        String before = null;
        String after = null;
        List<String> include = null;
        Map<String, String> dateCreated = null;
        Map<String, String> metadata = null;
                AddressList response = api.addressesList(limit, before, after, include, dateCreated, metadata);
        // TODO: test validations
    }
    
}
