/*
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)? 
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.lob.api.client;

import com.lob.api.ApiException;
import com.lob.model.BillingGroup;
import com.lob.model.BillingGroupEditable;
import com.lob.model.BillingGroupList;
import com.lob.model.LobError;
import com.lob.model.SortBy5;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.testng.annotations.*;

/**
 * API tests for BillingGroupsApi
 */
@Test(enabled=false)
public class BillingGroupsApiTest {

    private final BillingGroupsApi api = new BillingGroupsApi();

    
    /**
     * create
     *
     * Creates a new billing_group with the provided properties.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test(enabled=false)
    public void billingGroupCreateTest() throws ApiException {
        BillingGroupEditable billingGroupEditable = null;
                BillingGroup response = api.billingGroupCreate(billingGroupEditable);
        // TODO: test validations
    }
    
    /**
     * get
     *
     * Retrieves the details of an existing billing_group. You need only supply the unique billing_group identifier that was returned upon billing_group creation.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test(enabled=false)
    public void billingGroupRetrieveTest() throws ApiException {
        String bgId = null;
                BillingGroup response = api.billingGroupRetrieve(bgId);
        // TODO: test validations
    }
    
    /**
     * update
     *
     * Updates all editable attributes of the billing_group with the given id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test(enabled=false)
    public void billingGroupUpdateTest() throws ApiException {
        String bgId = null;
        BillingGroupEditable billingGroupEditable = null;
                BillingGroup response = api.billingGroupUpdate(bgId, billingGroupEditable);
        // TODO: test validations
    }
    
    /**
     * list
     *
     * Returns a list of your billing_groups. The billing_groups are returned sorted by creation date, with the most recently created billing_groups appearing first.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test(enabled=false)
    public void billingGroupsListTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        List<String> include = null;
        Map<String, String> dateCreated = null;
        Map<String, String> dateModified = null;
        SortBy5 sortBy = null;
                BillingGroupList response = api.billingGroupsList(limit, offset, include, dateCreated, dateModified, sortBy);
        // TODO: test validations
    }
    
}
