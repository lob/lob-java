/*
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)? 
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.lob.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.lob.model.ZipCodeType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;
import org.testng.annotations.*;


/**
 * Model tests for UsComponents
 */
public class UsComponentsTest {
    private final UsComponents model = new UsComponents();

    /**
     * Model tests for UsComponents
     */
    @Test
    public void testUsComponents() {
        // TODO: test UsComponents
    }

    /**
     * Test the property 'primaryNumber'
     */
    @Test
    public void primaryNumberTest() {
        // TODO: test primaryNumber
    }

    /**
     * Test the property 'streetPredirection'
     */
    @Test
    public void streetPredirectionTest() {
        // TODO: test streetPredirection
    }

    /**
     * Test the property 'streetName'
     */
    @Test
    public void streetNameTest() {
        // TODO: test streetName
    }

    /**
     * Test the property 'streetSuffix'
     */
    @Test
    public void streetSuffixTest() {
        // TODO: test streetSuffix
    }

    /**
     * Test the property 'streetPostdirection'
     */
    @Test
    public void streetPostdirectionTest() {
        // TODO: test streetPostdirection
    }

    /**
     * Test the property 'secondaryDesignator'
     */
    @Test
    public void secondaryDesignatorTest() {
        // TODO: test secondaryDesignator
    }

    /**
     * Test the property 'secondaryNumber'
     */
    @Test
    public void secondaryNumberTest() {
        // TODO: test secondaryNumber
    }

    /**
     * Test the property 'pmbDesignator'
     */
    @Test
    public void pmbDesignatorTest() {
        // TODO: test pmbDesignator
    }

    /**
     * Test the property 'pmbNumber'
     */
    @Test
    public void pmbNumberTest() {
        // TODO: test pmbNumber
    }

    /**
     * Test the property 'extraSecondaryDesignator'
     */
    @Test
    public void extraSecondaryDesignatorTest() {
        // TODO: test extraSecondaryDesignator
    }

    /**
     * Test the property 'extraSecondaryNumber'
     */
    @Test
    public void extraSecondaryNumberTest() {
        // TODO: test extraSecondaryNumber
    }

    /**
     * Test the property 'city'
     */
    @Test
    public void cityTest() {
        // TODO: test city
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'zipCode'
     */
    @Test
    public void zipCodeTest() {
        // TODO: test zipCode
    }

    /**
     * Test the property 'zipCodePlus4'
     */
    @Test
    public void zipCodePlus4Test() {
        // TODO: test zipCodePlus4
    }

    /**
     * Test the property 'zipCodeType'
     */
    @Test
    public void zipCodeTypeTest() {
        // TODO: test zipCodeType
    }

    /**
     * Test the property 'deliveryPointBarcode'
     */
    @Test
    public void deliveryPointBarcodeTest() {
        // TODO: test deliveryPointBarcode
    }

    /**
     * Test the property 'addressType'
     */
    @Test
    public void addressTypeTest() {
        // TODO: test addressType
    }

    /**
     * Test the property 'recordType'
     */
    @Test
    public void recordTypeTest() {
        // TODO: test recordType
    }

    /**
     * Test the property 'defaultBuildingAddress'
     */
    @Test
    public void defaultBuildingAddressTest() {
        // TODO: test defaultBuildingAddress
    }

    /**
     * Test the property 'county'
     */
    @Test
    public void countyTest() {
        // TODO: test county
    }

    /**
     * Test the property 'countyFips'
     */
    @Test
    public void countyFipsTest() {
        // TODO: test countyFips
    }

    /**
     * Test the property 'carrierRoute'
     */
    @Test
    public void carrierRouteTest() {
        // TODO: test carrierRoute
    }

    /**
     * Test the property 'carrierRouteType'
     */
    @Test
    public void carrierRouteTypeTest() {
        // TODO: test carrierRouteType
    }

    /**
     * Test the property 'latitude'
     */
    @Test
    public void latitudeTest() {
        // TODO: test latitude
    }

    /**
     * Test the property 'longitude'
     */
    @Test
    public void longitudeTest() {
        // TODO: test longitude
    }

}
