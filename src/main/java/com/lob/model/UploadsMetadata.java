/*
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)? 
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.lob.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.lob.model.OptionalAddressColumnMapping;
import com.lob.model.RequiredAddressColumnMapping;
import com.lob.model.UploadsMetadata;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
<<<<<<<< HEAD:src/main/java/com/lob/model/UploadsMetadata.java
import java.util.ArrayList;
import java.util.List;
========
import org.openapitools.jackson.nullable.JsonNullable;
>>>>>>>> main:src/main/java/com/lob/model/UploadWritable.java

import com.google.gson.Gson;
/**
 * The list of column headers in your file as an array that you want as metadata associated with each mailpiece. See our &lt;a href&#x3D;\&quot;https://help.lob.com/print-and-mail/building-a-mail-strategy/campaign-or-triggered-sends/campaign-audience-guide#required-columns-2\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Campaign Audience Guide&lt;/a&gt; for additional details.
 */
@ApiModel(description = "The list of column headers in your file as an array that you want as metadata associated with each mailpiece. See our <a href=\"https://help.lob.com/print-and-mail/building-a-mail-strategy/campaign-or-triggered-sends/campaign-audience-guide#required-columns-2\" target=\"_blank\">Campaign Audience Guide</a> for additional details.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class UploadsMetadata {
  public static final String SERIALIZED_NAME_COLUMNS = "columns";

<<<<<<<< HEAD:src/main/java/com/lob/model/UploadsMetadata.java
  @SerializedName(SERIALIZED_NAME_COLUMNS)
  private List<String> columns = new ArrayList<>();
========
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_ID)
  

  private String campaignId;
  /**
  * Get campaignId
  * @return campaignId
  **/
  
  @javax.annotation.Nullable
  
  @ApiModelProperty(required = true, value = "")
  
  public String getCampaignId() {
      return campaignId;
  }
  
  

  public static final String SERIALIZED_NAME_REQUIRED_ADDRESS_COLUMN_MAPPING = "requiredAddressColumnMapping";

  @SerializedName(SERIALIZED_NAME_REQUIRED_ADDRESS_COLUMN_MAPPING)
  

  private RequiredAddressColumnMapping requiredAddressColumnMapping;
  /**
  * Get requiredAddressColumnMapping
  * @return requiredAddressColumnMapping
  **/
  
  @javax.annotation.Nullable
  
  @ApiModelProperty(value = "")
  
  public RequiredAddressColumnMapping getRequiredAddressColumnMapping() {
      return requiredAddressColumnMapping;
  }
  
  

  public static final String SERIALIZED_NAME_OPTIONAL_ADDRESS_COLUMN_MAPPING = "optionalAddressColumnMapping";

  @SerializedName(SERIALIZED_NAME_OPTIONAL_ADDRESS_COLUMN_MAPPING)
  

  private OptionalAddressColumnMapping optionalAddressColumnMapping;
  /**
  * Get optionalAddressColumnMapping
  * @return optionalAddressColumnMapping
  **/
  
  @javax.annotation.Nullable
  
  @ApiModelProperty(value = "")
  
  public OptionalAddressColumnMapping getOptionalAddressColumnMapping() {
      return optionalAddressColumnMapping;
  }
  
  

  public static final String SERIALIZED_NAME_METADATA = "metadata";

  @SerializedName(SERIALIZED_NAME_METADATA)
  

  private UploadsMetadata metadata = new UploadsMetadata();
  /**
  * Get metadata
  * @return metadata
  **/
  
  @javax.annotation.Nullable
  
  @ApiModelProperty(value = "")
  
  public UploadsMetadata getMetadata() {
      return metadata;
  }
  
  

  public static final String SERIALIZED_NAME_MERGE_VARIABLE_COLUMN_MAPPING = "mergeVariableColumnMapping";

  @SerializedName(SERIALIZED_NAME_MERGE_VARIABLE_COLUMN_MAPPING)
  

  private Object mergeVariableColumnMapping;
  /**
  * The mapping of column headers in your file to the merge variables present in your creative. See our <a href=\"https://help.lob.com/print-and-mail/building-a-mail-strategy/campaign-or-triggered-sends/campaign-audience-guide#step-3-map-merge-variable-data-if-applicable-7\" target=\"_blank\">Campaign Audience Guide</a> for additional details. <br />If a merge variable has the same \"name\" as a \"key\" in the `requiredAddressColumnMapping` or `optionalAddressColumnMapping` objects, then they **CANNOT** have a different value in this object. If a different value is provided, then when the campaign is processing it will get overwritten with the mapped value present in the `requiredAddressColumnMapping` or `optionalAddressColumnMapping` objects.
  * @return mergeVariableColumnMapping
  **/
  
  @javax.annotation.Nullable
  
  @ApiModelProperty(example = "{\"name\":\"recipient_name\",\"gift_code\":\"code\"}", value = "The mapping of column headers in your file to the merge variables present in your creative. See our <a href=\"https://help.lob.com/print-and-mail/building-a-mail-strategy/campaign-or-triggered-sends/campaign-audience-guide#step-3-map-merge-variable-data-if-applicable-7\" target=\"_blank\">Campaign Audience Guide</a> for additional details. <br />If a merge variable has the same \"name\" as a \"key\" in the `requiredAddressColumnMapping` or `optionalAddressColumnMapping` objects, then they **CANNOT** have a different value in this object. If a different value is provided, then when the campaign is processing it will get overwritten with the mapped value present in the `requiredAddressColumnMapping` or `optionalAddressColumnMapping` objects.")
  
  public Object getMergeVariableColumnMapping() {
      return mergeVariableColumnMapping;
  }
  
  
>>>>>>>> main:src/main/java/com/lob/model/UploadWritable.java


  /*
  public UploadsMetadata columns(List<String> columns) {
    
    this.columns = columns;
    return this;
  }
  */

  public UploadsMetadata addColumnsItem(String columnsItem) {
    this.columns.add(columnsItem);
    return this;
  }

  public void setCampaignId(String campaignId) {
    this.campaignId = campaignId;
  }



  /*
  public UploadWritable requiredAddressColumnMapping(RequiredAddressColumnMapping requiredAddressColumnMapping) {
    
    this.requiredAddressColumnMapping = requiredAddressColumnMapping;
    return this;
  }
  */


  public void setRequiredAddressColumnMapping(RequiredAddressColumnMapping requiredAddressColumnMapping) {
    this.requiredAddressColumnMapping = requiredAddressColumnMapping;
  }



  /*
  public UploadWritable optionalAddressColumnMapping(OptionalAddressColumnMapping optionalAddressColumnMapping) {
    
    this.optionalAddressColumnMapping = optionalAddressColumnMapping;
    return this;
  }
  */


  public void setOptionalAddressColumnMapping(OptionalAddressColumnMapping optionalAddressColumnMapping) {
    this.optionalAddressColumnMapping = optionalAddressColumnMapping;
  }



  /*
  public UploadWritable metadata(UploadsMetadata metadata) {
    
    this.metadata = metadata;
    return this;
  }
  */


  public void setMetadata(UploadsMetadata metadata) {
    this.metadata = metadata;
  }



  /*
  public UploadWritable mergeVariableColumnMapping(Object mergeVariableColumnMapping) {
    
    this.mergeVariableColumnMapping = mergeVariableColumnMapping;
    return this;
  }
  */


  public void setMergeVariableColumnMapping(Object mergeVariableColumnMapping) {
    this.mergeVariableColumnMapping = mergeVariableColumnMapping;
  }

  public void setColumns(List<String> columns) {
    this.columns = columns;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
<<<<<<<< HEAD:src/main/java/com/lob/model/UploadsMetadata.java
    UploadsMetadata uploadsMetadata = (UploadsMetadata) o;
    return Objects.equals(this.columns, uploadsMetadata.columns);
========
    UploadWritable uploadWritable = (UploadWritable) o;
    return Objects.equals(this.campaignId, uploadWritable.campaignId) &&
        Objects.equals(this.requiredAddressColumnMapping, uploadWritable.requiredAddressColumnMapping) &&
        Objects.equals(this.optionalAddressColumnMapping, uploadWritable.optionalAddressColumnMapping) &&
        Objects.equals(this.metadata, uploadWritable.metadata) &&
        Objects.equals(this.mergeVariableColumnMapping, uploadWritable.mergeVariableColumnMapping);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
>>>>>>>> main:src/main/java/com/lob/model/UploadWritable.java
  }

  @Override
  public int hashCode() {
<<<<<<<< HEAD:src/main/java/com/lob/model/UploadsMetadata.java
    return Objects.hash(columns);
========
    return Objects.hash(campaignId, requiredAddressColumnMapping, optionalAddressColumnMapping, metadata, mergeVariableColumnMapping);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
>>>>>>>> main:src/main/java/com/lob/model/UploadWritable.java
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("{\n");
<<<<<<<< HEAD:src/main/java/com/lob/model/UploadsMetadata.java
    sb.append("    columns: ").append(toIndentedString(columns)).append("\n");
========
    sb.append("    campaignId: ").append(toIndentedString(campaignId)).append("\n");
    sb.append("    requiredAddressColumnMapping: ").append(toIndentedString(requiredAddressColumnMapping)).append("\n");
    sb.append("    optionalAddressColumnMapping: ").append(toIndentedString(optionalAddressColumnMapping)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    mergeVariableColumnMapping: ").append(toIndentedString(mergeVariableColumnMapping)).append("\n");
>>>>>>>> main:src/main/java/com/lob/model/UploadWritable.java
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

